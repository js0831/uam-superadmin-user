{"version":3,"sources":["./src/app/modules/channel/channel.module.ts","./src/app/modules/channel/channel/channel.component.ts","./src/app/modules/channel/channel/channel.component.html","./src/app/shared/service/api.service.ts"],"names":[],"mappings":"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","file":"modules-channel-channel-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChannelComponent } from './channel/channel.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../../shared/shared.module';\n\n\nconst routes: Routes = [\n  { path: '', component: ChannelComponent },\n];\n\n@NgModule({\n  declarations: [ChannelComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class ChannelModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/shared/service/api.service';\nimport { LocalDataService } from 'src/app/shared/service/local-data.service';\nimport { environment } from 'src/environments/environment';\n\n\nexport interface IChannel  {\n  id: string;\n  name: string;\n  // description?: string;\n}\n\n@Component({\n  selector: 'app-channel',\n  templateUrl: './channel.component.html',\n  styleUrls: ['./channel.component.scss']\n})\nexport class ChannelComponent implements OnInit {\n\n  public entity = 'channel';\n  public modalTitle: string;\n  public form: FormGroup;\n  public showModal = false;\n  public channels: IChannel[] = [];\n  public staticChannels: IChannel[] = [\n    {\n      id: 'crm',\n      name: 'CRM'\n    },\n    {\n      id: 'oat',\n      name: 'OAT'\n    },\n    {\n      id: 'ist',\n      name: 'IST'\n    }\n  ];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: ApiService,\n    private router: Router,\n    private localDataService: LocalDataService\n  ) { }\n\n  ngOnInit(): void {\n    this.buildForm();\n\n    // TEMP\n    if (environment.staticData) {\n      this.channels = this.staticChannels;\n      return;\n    }\n\n    this.apiService.list(this.entity, {limit: 100, offset: 0}).subscribe( x => {\n      this.channels = x;\n    });\n  }\n\n  private buildForm(): void {\n    this.form = this.formBuilder.group({\n      id: '',\n      name: ['', [Validators.required]]\n    });\n  }\n\n  showAppForm(type: string, br?: IChannel): void {\n    if (type === 'add') {\n      this.modalTitle = 'New Channel';\n    } else {\n      this.modalTitle = `Edit ${br.name}`;\n      this.form.setValue(br);\n    }\n\n    this.showModal = true;\n  }\n\n  closeModal(): void {\n    this.form.reset();\n    this.showModal = false;\n  }\n\n\n  submitForm(): void{\n    this.form.markAllAsTouched();\n    if (this.form.invalid) {\n      return;\n    }\n    this.showModal = false;\n    const {id, name }: IChannel = this.form.value;\n\n    if (id) {\n      this.update({id, name });\n    } else {\n      this.create({ name });\n    }\n\n    this.form.reset();\n  }\n\n  deleteApp(app: IChannel): void {\n    const sure = confirm('Are you sure?');\n    if (sure) {\n\n      // TEMP\n      if (environment.staticData) {\n        this.channels = this.channels.filter( o => o.id !== app.id);\n        return;\n      }\n\n      this.apiService.delete(this.entity, app.id).subscribe( x => {\n        this.channels = this.channels.filter( o => o.id !== app.id);\n      });\n    }\n  }\n\n\n  private update({id, name}): void{\n\n    // TEMP\n    if (environment.staticData) {\n      this.channels.map( x => {\n        if (id === x.id) {\n          x.name = name;\n        }\n      });\n      return;\n    }\n\n    this.apiService.update(this.entity, id, {\n      name\n    }).subscribe ( x => {\n      this.channels.map( o => {\n        if (id === o.id) {\n          o.name = name;\n        }\n      });\n    });\n  }\n\n  private create({ name }): void{\n\n    // TEMP\n    if (environment.staticData) {\n      this.channels.push({\n        id: new Date().getTime().toString(),\n        name\n      });\n      return;\n    }\n\n    this.apiService.create(this.entity, {\n      name\n    }).subscribe ( x => {\n        this.channels.push({\n          id: x.id,\n          name\n        });\n    });\n  }\n\n  selectApp(app: IChannel): void {\n    // this.localDataService.save('application', app);\n    // this.router.navigate(['/businessroles/', app.id]);\n  }\n}\n","<nav aria-label=\"breadcrumb\">\n    <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item active\">Channels</li>\n    </ol>\n</nav>\n\n\n<div class=\"table-search\"> \n    <input type=\"search\" class=\"form-control form-control-sm\" placeholder=\"Search\">\n    <button type=\"button\" (click)=\"showAppForm('add')\" class=\"btn btn-primary btn-sm\">Add New Channel</button>\n  </div>\n  \n  <table class=\"table table-sm table-striped\">\n      <thead class=\"\">\n        <tr>\n          <th scope=\"col\">Name</th>\n          <!-- <th scope=\"col\">Description</th> -->\n          <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let c of channels\">\n          <td>\n              <a class=\"btn btn-link btn-sm\" (click)=\"selectApp(c)\">{{c.name}}</a>\n          </td>\n          <!-- <td>{{br.description}}</td> -->\n          <td class=\"actions\">\n              <a class=\"btn-link btn-sm\" (click)=\"showAppForm('edit', c)\">Edit</a>\n              <a class=\"btn-link btn-sm\" (click)=\"deleteApp(c)\">Delete</a>\n          </td>\n        </tr> \n      </tbody>\n  </table>\n\n\n  <app-modal\n    [show]=\"showModal\"\n    [saveBtn]=\"'Save'\"\n    [closeBtn]=\"'Cancel'\"\n    [title]=\"modalTitle\"\n    (close)=\"closeModal()\"\n    (submit)=\"submitForm()\"\n>\n    <form [formGroup]=\"form\">\n        <input formControlName=\"id\" type=\"hidden\"> \n        <div class=\"form-group\">\n            <label>Name</label> \n            <input \n              formControlName=\"name\" type=\"text\" class=\"form-control is-invalid\" \n              [ngClass]=\"{'is-invalid': form.controls.name.invalid && form.controls.name.touched}\">\n        </div>\n        <!-- <div class=\"form-group\">\n            <label>Description</label>\n            <textarea formControlName=\"description\" type=\"text\" class=\"form-control\" ></textarea>\n        </div> -->\n    </form>\n</app-modal>\n  ","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { JkWaitService } from 'jk-wait';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  configUrl = 'assets/config.json';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    public wait: JkWaitService,\r\n  ) { }\r\n\r\n  create(what: string, data: any): Observable<any>{\r\n    this.wait.start();\r\n    const endpoint = `${environment.apiURL}${what}/`;\r\n    return this.http.post(endpoint, data).pipe(map( x => {\r\n      this.wait.end();\r\n      return x;\r\n    }));\r\n  }\r\n\r\n  update(what: string, id: string, data: any): Observable<any>{\r\n    this.wait.start();\r\n    const endpoint = `${environment.apiURL}${what}/${id}`;\r\n    return this.http.put(endpoint, data).pipe(map( x => {\r\n      this.wait.end();\r\n      return x;\r\n    }));\r\n  }\r\n\r\n  delete(what: string, id: string): Observable<any>{\r\n    this.wait.start();\r\n    const endpoint = `${environment.apiURL}${what}/${id}`;\r\n    return this.http.delete(endpoint).pipe(map( x => {\r\n      this.wait.end();\r\n      return x;\r\n    }));\r\n  }\r\n\r\n  delete2(what: string, id: string): Observable<any>{\r\n    this.wait.start();\r\n    const endpoint = `${environment.apiURL}${what}?id=${id}`;\r\n    return this.http.delete(endpoint).pipe(map( x => {\r\n      this.wait.end();\r\n      return x;\r\n    }));\r\n  }\r\n\r\n  list(ofWhat: string, params?: any): Observable<any>{\r\n    this.wait.start();\r\n    const paramString = params ? `?${this.objectToParams(params)}` : '';\r\n    const endpoint = `${environment.apiURL}${ofWhat}/${paramString}`;\r\n    return this.http.get(endpoint).pipe(map( x => {\r\n      this.wait.end();\r\n      return x;\r\n    }));\r\n  }\r\n\r\n  listMap(ofWhat: string, params?: any): Observable<any>{\r\n    this.wait.start();\r\n    const paramString = params ? `?${this.objectToParams(params)}` : '';\r\n    const endpoint = `${environment.apiURL}${ofWhat}/${paramString}`;\r\n    return this.http.get(endpoint).pipe(\r\n      map( (x: any) => {\r\n        this.wait.end();\r\n        return {\r\n          data: x.content,\r\n          count: x.totalElements,\r\n          totalPage: x.totalPages\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  private objectToParams(obj: any): string{\r\n    const keys = Object.keys(obj);\r\n    let paramsString = '';\r\n    keys.forEach( key => {\r\n      paramsString += `${key}=${obj[key]}&`;\r\n    });\r\n    return paramsString.slice(0, -1);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}